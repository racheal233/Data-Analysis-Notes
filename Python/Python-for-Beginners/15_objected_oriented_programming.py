# 面向过程编程：复杂情况下参数过多，不利于理解，代码清晰度降低。按照事情的步骤依次编写，每个步骤写一个函数，函数内填入对应相关的参数表示相应的属性。比如atm程序，先存入一笔再取出一笔，则对应存钱取钱各写一个函数，再在函数下设定参数，表示金额、银行、面值、支行等等参数。
# 面向对象编程：以对象为核心，不聚焦与步骤，考虑各个对象的性质，做什么事情。以atm程序为例，可以创建atm类，纸币类，再用类创建对象。类是创建对象的模板，对象是类的实例。各对象下拥有不同的属性。对象就可以直接作为参数使用。除了属性。另一个能够与对象绑定的是方法。
# 类-对象-属性/方法  以用洗衣机洗衣服为例。对象包括人和洗衣机，人能放置衣服（方法）和开机（方法），所以方法就是放在类里面的函数，属性是放在类里面的变量。
# 封装：类只通过外部接口访问和使用，具体实现细节不再重要 、 多态：同样的接口，因为具体类的不同，而又不同表现 、继承：允许创建不同层次的类
# 类定义了对象有何种属性和方法，对象拥有的具体属性可以不同
